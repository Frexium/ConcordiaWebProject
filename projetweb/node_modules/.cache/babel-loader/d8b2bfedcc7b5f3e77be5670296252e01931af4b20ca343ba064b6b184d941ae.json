{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f2223522\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"displayer-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CardBox = _resolveComponent(\"CardBox\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(5, index => {\n    return _createElementVNode(\"div\", {\n      key: index,\n      class: \"five\"\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.numbers / (($props.numbers - $props.numbers % 5) / 5), index2 => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index2,\n        class: \"three\"\n      }, [$options.checker(index + (index2 - 1) * 5, $props.numbers) ? (_openBlock(), _createBlock(_component_CardBox, {\n        key: 0,\n        number: index + (index2 - 1) * 5\n      }, null, 8 /* PROPS */, [\"number\"])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 64 /* STABLE_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_Fragment","_renderList","index","_createElementVNode","key","$props","numbers","index2","$options","checker","_createBlock","_component_CardBox","number"],"sources":["C:\\Users\\matth\\projetweb\\projetweb\\src\\components\\Displayer.vue"],"sourcesContent":["<template>\r\n  <div class=\"displayer-container\">\r\n    <div v-for=\"index in 5\" :key=\"index\" class=\"five\">\r\n      <div v-for=\"index2 in numbers/((numbers-(numbers%5))/5)\" :key=\"index2\" class=\"three\">\r\n        <CardBox v-if=\"checker(index+(index2-1)*5, numbers)\" :number=\"index+(index2-1)*5\"></CardBox>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardBox from \"@/components/CardBox.vue\";\r\n\r\nexport default {\r\n  name: \"Displayer-Component\",\r\n  components: {CardBox},\r\n  props: {\r\n    numbers: Number,\r\n  },\r\n  methods: {\r\n    checker(i, j) {\r\n      return i <= j;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.displayer-container {\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n.three {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.five {\r\n  justify-content: space-around;\r\n  max-width: 20%;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAqB;;;uBAAhCC,mBAAA,CAMM,OANNC,UAMM,I,cALJD,mBAAA,CAIME,SAAA,QAAAC,WAAA,CAJe,CAAC,EAAVC,KAAK;WAAjBC,mBAAA,CAIM;MAJmBC,GAAG,EAAEF,KAAK;MAAEL,KAAK,EAAC;2BACzCC,mBAAA,CAEME,SAAA,QAAAC,WAAA,CAFgBI,MAAA,CAAAC,OAAO,KAAGD,MAAA,CAAAC,OAAO,GAAED,MAAA,CAAAC,OAAO,YAApCC,MAAM;2BAAlBT,mBAAA,CAEM;QAFoDM,GAAG,EAAEG,MAAM;QAAEV,KAAK,EAAC;UAC5DW,QAAA,CAAAC,OAAO,CAACP,KAAK,IAAEK,MAAM,WAAOF,MAAA,CAAAC,OAAO,K,cAAlDI,YAAA,CAA4FC,kBAAA;;QAAtCC,MAAM,EAAEV,KAAK,IAAEK,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}